digraph {
m_bb0 [shape = none, label  = <<table border="0" cellspacing="0">
<tr><td port="f1" border="1" colspan="2"><table bgcolor="LightYellow" border="0">
<tr><td align="left">if.else5:</td></tr>
<tr><td bgcolor="lightgreen" align="left">  tail call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i32 271, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.LogLuvDecode32, i64 0, i64 0)) #13</td></tr>
<tr><td bgcolor="lightgreen" align="left">  unreachable</td></tr>
</table>
</td>
<td port="f2" border="1" colspan="2"><table bgcolor="LightCyan" border="0">
<tr><td align="left">if.else:</td></tr>
<tr><td bgcolor="lightgreen" align="left">  tail call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i32 269, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.LogLuvDecode32, i64 0, i64 0)) #13</td></tr>
<tr><td bgcolor="lightgreen" align="left">  unreachable</td></tr>
</table>
</td></tr>
</table>> ]
f_bb0 [shape = none, label  = <<table  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">entry:</td></tr>
<tr><td align="left">  %cmp = icmp eq i16 %s, 0</td></tr>
<tr><td bgcolor="yellow" align="left">  br i1 %cmp, label %if.end, label %if.else</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb1 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">if.end:</td></tr>
<tr><td align="left">  %tif_data = getelementptr inbounds %struct.tiff, %struct.tiff* %tif, i64 0, i32 37</td></tr>
<tr><td align="left">  %0 = bitcast i8** %tif_data to %struct.logLuvState**</td></tr>
<tr><td align="left">  %1 = load %struct.logLuvState*, %struct.logLuvState** %0, align 8, !tbaa !3</td></tr>
<tr><td align="left">  %cmp2.not = icmp eq %struct.logLuvState* %1, null</td></tr>
<tr><td align="left">  br i1 %cmp2.not, label %if.else5, label %if.end6</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb2 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">if.end6:</td></tr>
<tr><td align="left">  %pixel_size = getelementptr inbounds %struct.logLuvState, %struct.logLuvState* %1, i64 0, i32 1</td></tr>
<tr><td align="left">  %2 = load i32, i32* %pixel_size, align 4, !tbaa !14</td></tr>
<tr><td align="left">  %div = sdiv i32 %occ, %2</td></tr>
<tr><td align="left">  %user_datafmt = getelementptr inbounds %struct.logLuvState, %struct.logLuvState* %1, i64 0, i32 0</td></tr>
<tr><td align="left">  %3 = load i32, i32* %user_datafmt, align 8, !tbaa !16</td></tr>
<tr><td align="left">  %cmp7 = icmp eq i32 %3, 2</td></tr>
<tr><td align="left">  br i1 %cmp7, label %if.then9, label %if.else10</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb3 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">if.then9:</td></tr>
<tr><td align="left">  %4 = bitcast i8* %op to i32*</td></tr>
<tr><td align="left">  br label %if.end17</td></tr>
</table>
</td></tr>
</table>> ]
f_bb4 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">if.else10:</td></tr>
<tr><td align="left">  %tbuflen = getelementptr inbounds %struct.logLuvState, %struct.logLuvState* %1, i64 0, i32 3</td></tr>
<tr><td align="left">  %5 = load i16, i16* %tbuflen, align 8, !tbaa !17</td></tr>
<tr><td align="left">  %conv11 = sext i16 %5 to i32</td></tr>
<tr><td align="left">  %cmp12.not = icmp sgt i32 %div, %conv11</td></tr>
<tr><td align="left">  br i1 %cmp12.not, label %if.else15, label %if.end16</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb5 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">if.else15:</td></tr>
<tr><td align="left">  tail call void @__assert_fail(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i32 278, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.LogLuvDecode32, i64 0, i64 0)) #13</td></tr>
<tr><td align="left">  unreachable</td></tr>
</table>
</td></tr>
</table>> ]
f_bb6 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">if.end16:</td></tr>
<tr><td align="left">  %tbuf = getelementptr inbounds %struct.logLuvState, %struct.logLuvState* %1, i64 0, i32 2</td></tr>
<tr><td align="left">  %6 = bitcast i8*** %tbuf to i32**</td></tr>
<tr><td align="left">  %7 = load i32*, i32** %6, align 8, !tbaa !18</td></tr>
<tr><td align="left">  br label %if.end17</td></tr>
</table>
</td></tr>
</table>> ]
f_bb7 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">if.end17:</td></tr>
<tr><td align="left">  %tp.0 = phi i32* [ %4, %if.then9 ], [ %7, %if.end16 ]</td></tr>
<tr><td align="left">  %8 = bitcast i32* %tp.0 to i8*</td></tr>
<tr><td align="left">  %mul = shl i32 %div, 2</td></tr>
<tr><td align="left">  tail call void @_TIFFmemset(i8* %8, i32 0, i32 %mul) #14</td></tr>
<tr><td align="left">  %tif_rawcp = getelementptr inbounds %struct.tiff, %struct.tiff* %tif, i64 0, i32 42</td></tr>
<tr><td align="left">  %9 = load i8*, i8** %tif_rawcp, align 8, !tbaa !19</td></tr>
<tr><td align="left">  %tif_rawcc = getelementptr inbounds %struct.tiff, %struct.tiff* %tif, i64 0, i32 43</td></tr>
<tr><td align="left">  %10 = load i32, i32* %tif_rawcc, align 8, !tbaa !20</td></tr>
<tr><td align="left">  br label %for.cond</td></tr>
</table>
</td></tr>
</table>> ]
f_bb8 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">for.cond:</td></tr>
<tr><td align="left">  %shft.0 = phi i32 [ 32, %if.end17 ], [ %sub, %for.end ]</td></tr>
<tr><td align="left">  %bp.0 = phi i8* [ %9, %if.end17 ], [ %bp.1, %for.end ]</td></tr>
<tr><td align="left">  %cc.0 = phi i32 [ %10, %if.end17 ], [ %cc.1, %for.end ]</td></tr>
<tr><td align="left">  %sub = add nsw i32 %shft.0, -8</td></tr>
<tr><td align="left">  %cmp20.not = icmp eq i32 %shft.0, 0</td></tr>
<tr><td align="left">  br i1 %cmp20.not, label %for.end63, label %for.cond22</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb9 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">for.cond22:</td></tr>
<tr><td align="left">  %i.0 = phi i32 [ %i.3, %if.end55 ], [ 0, %for.cond ]</td></tr>
<tr><td align="left">  %bp.1 = phi i8* [ %bp.3, %if.end55 ], [ %bp.0, %for.cond ]</td></tr>
<tr><td align="left">  %cc.1 = phi i32 [ %cc.3, %if.end55 ], [ %cc.0, %for.cond ]</td></tr>
<tr><td align="left">  %cmp23 = icmp sgt i32 %div, %i.0</td></tr>
<tr><td align="left">  %cmp25 = icmp sgt i32 %cc.1, 0</td></tr>
<tr><td align="left">  %11 = select i1 %cmp23, i1 %cmp25, i1 false</td></tr>
<tr><td align="left">  br i1 %11, label %for.body27, label %for.end</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb10 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">for.body27:</td></tr>
<tr><td align="left">  %12 = load i8, i8* %bp.1, align 1, !tbaa !21</td></tr>
<tr><td align="left">  %conv28 = zext i8 %12 to i32</td></tr>
<tr><td align="left">  %cmp29 = icmp slt i8 %12, 0</td></tr>
<tr><td align="left">  br i1 %cmp29, label %if.then31, label %while.cond39.preheader</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb11 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">while.cond39.preheader:</td></tr>
<tr><td align="left">  %13 = sext i32 %i.0 to i64</td></tr>
<tr><td align="left">  br label %while.cond39</td></tr>
</table>
</td></tr>
</table>> ]
f_bb12 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">if.then31:</td></tr>
<tr><td align="left">  %incdec.ptr = getelementptr inbounds i8, i8* %bp.1, i64 1</td></tr>
<tr><td align="left">  %add = add nsw i32 %conv28, -126</td></tr>
<tr><td align="left">  %14 = load i8, i8* %incdec.ptr, align 1, !tbaa !21</td></tr>
<tr><td align="left">  %conv34 = zext i8 %14 to i32</td></tr>
<tr><td align="left">  %shl = shl i32 %conv34, %sub</td></tr>
<tr><td align="left">  %15 = sext i32 %i.0 to i64</td></tr>
<tr><td align="left">  br label %while.cond</td></tr>
</table>
</td></tr>
</table>> ]
f_bb13 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">while.cond:</td></tr>
<tr><td align="left">  %indvars.iv129 = phi i64 [ %indvars.iv.next130, %while.body ], [ %15, %if.then31 ]</td></tr>
<tr><td align="left">  %rc.0 = phi i32 [ %dec, %while.body ], [ %add, %if.then31 ]</td></tr>
<tr><td align="left">  %tobool.not = icmp eq i32 %rc.0, 0</td></tr>
<tr><td align="left">  br i1 %tobool.not, label %if.end55.loopexit, label %while.body</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb14 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">while.body:</td></tr>
<tr><td align="left">  %dec = add nsw i32 %rc.0, -1</td></tr>
<tr><td align="left">  %indvars.iv.next130 = add nsw i64 %indvars.iv129, 1</td></tr>
<tr><td align="left">  %arrayidx = getelementptr inbounds i32, i32* %tp.0, i64 %indvars.iv129</td></tr>
<tr><td align="left">  %16 = load i32, i32* %arrayidx, align 4, !tbaa !22</td></tr>
<tr><td align="left">  %or = or i32 %16, %shl</td></tr>
<tr><td align="left">  store i32 %or, i32* %arrayidx, align 4, !tbaa !22</td></tr>
<tr><td align="left">  br label %while.cond, !llvm.loop !23</td></tr>
</table>
</td></tr>
</table>> ]
f_bb15 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">while.cond39:</td></tr>
<tr><td align="left">  %indvars.iv = phi i64 [ %13, %while.cond39.preheader ], [ %indvars.iv.next, %while.body46 ]</td></tr>
<tr><td align="left">  %bp.1.pn = phi i8* [ %bp.1, %while.cond39.preheader ], [ %bp.2, %while.body46 ]</td></tr>
<tr><td align="left">  %cc.2 = phi i32 [ %cc.1, %while.cond39.preheader ], [ %dec40, %while.body46 ]</td></tr>
<tr><td align="left">  %rc.1 = phi i32 [ %conv28, %while.cond39.preheader ], [ %dec43, %while.body46 ]</td></tr>
<tr><td align="left">  %bp.2 = getelementptr inbounds i8, i8* %bp.1.pn, i64 1</td></tr>
<tr><td align="left">  %dec40 = add nsw i32 %cc.2, -1</td></tr>
<tr><td align="left">  %tobool41.not = icmp eq i32 %dec40, 0</td></tr>
<tr><td align="left">  br i1 %tobool41.not, label %if.end55, label %land.rhs42</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb16 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">land.rhs42:</td></tr>
<tr><td align="left">  %tobool44.not = icmp eq i32 %rc.1, 0</td></tr>
<tr><td align="left">  br i1 %tobool44.not, label %if.end55, label %while.body46</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb17 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">while.body46:</td></tr>
<tr><td align="left">  %dec43 = add nsw i32 %rc.1, -1</td></tr>
<tr><td align="left">  %17 = load i8, i8* %bp.2, align 1, !tbaa !21</td></tr>
<tr><td align="left">  %conv48 = zext i8 %17 to i32</td></tr>
<tr><td align="left">  %shl49 = shl i32 %conv48, %sub</td></tr>
<tr><td align="left">  %indvars.iv.next = add nsw i64 %indvars.iv, 1</td></tr>
<tr><td align="left">  %arrayidx52 = getelementptr inbounds i32, i32* %tp.0, i64 %indvars.iv</td></tr>
<tr><td align="left">  %18 = load i32, i32* %arrayidx52, align 4, !tbaa !22</td></tr>
<tr><td align="left">  %or53 = or i32 %shl49, %18</td></tr>
<tr><td align="left">  store i32 %or53, i32* %arrayidx52, align 4, !tbaa !22</td></tr>
<tr><td align="left">  br label %while.cond39, !llvm.loop !25</td></tr>
</table>
</td></tr>
</table>> ]
f_bb18 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">if.end55.loopexit:</td></tr>
<tr><td align="left">  %incdec.ptr33 = getelementptr inbounds i8, i8* %bp.1, i64 2</td></tr>
<tr><td align="left">  %sub35 = add nsw i32 %cc.1, -2</td></tr>
<tr><td align="left">  br label %if.end55</td></tr>
</table>
</td></tr>
</table>> ]
f_bb19 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">if.end55:</td></tr>
<tr><td align="left">  %i.3.in = phi i64 [ %indvars.iv129, %if.end55.loopexit ], [ %indvars.iv, %while.cond39 ], [ %indvars.iv, %land.rhs42 ]</td></tr>
<tr><td align="left">  %bp.3 = phi i8* [ %incdec.ptr33, %if.end55.loopexit ], [ %bp.2, %while.cond39 ], [ %bp.2, %land.rhs42 ]</td></tr>
<tr><td align="left">  %cc.3 = phi i32 [ %sub35, %if.end55.loopexit ], [ 0, %while.cond39 ], [ %dec40, %land.rhs42 ]</td></tr>
<tr><td align="left">  %i.3 = trunc i64 %i.3.in to i32</td></tr>
<tr><td align="left">  br label %for.cond22, !llvm.loop !26</td></tr>
</table>
</td></tr>
</table>> ]
f_bb20 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">for.end:</td></tr>
<tr><td align="left">  %cmp56.not = icmp eq i32 %div, %i.0</td></tr>
<tr><td align="left">  br i1 %cmp56.not, label %for.cond, label %if.then58, !llvm.loop !27</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb21 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">if.then58:</td></tr>
<tr><td align="left">  %tif_name = getelementptr inbounds %struct.tiff, %struct.tiff* %tif, i64 0, i32 0</td></tr>
<tr><td align="left">  %19 = load i8*, i8** %tif_name, align 8, !tbaa !28</td></tr>
<tr><td align="left">  %tif_row = getelementptr inbounds %struct.tiff, %struct.tiff* %tif, i64 0, i32 11</td></tr>
<tr><td align="left">  %20 = load i32, i32* %tif_row, align 8, !tbaa !29</td></tr>
<tr><td align="left">  %sub59 = sub nsw i32 %div, %i.0</td></tr>
<tr><td align="left">  tail call void (i8*, i8*, ...) @TIFFError(i8* %19, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.13, i64 0, i64 0), i32 %20, i32 %sub59) #14</td></tr>
<tr><td align="left">  br label %cleanup</td></tr>
</table>
</td></tr>
</table>> ]
f_bb22 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">for.end63:</td></tr>
<tr><td align="left">  %tfunc = getelementptr inbounds %struct.logLuvState, %struct.logLuvState* %1, i64 0, i32 4</td></tr>
<tr><td align="left">  %21 = load void (%struct.logLuvState*, i8*, i32)*, void (%struct.logLuvState*, i8*, i32)** %tfunc, align 8, !tbaa !30</td></tr>
<tr><td align="left">  tail call void %21(%struct.logLuvState* nonnull %1, i8* %op, i32 %div) #14</td></tr>
<tr><td align="left">  br label %cleanup</td></tr>
</table>
</td></tr>
</table>> ]
f_bb23 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">cleanup:</td></tr>
<tr><td align="left">  %storemerge122 = phi i8* [ %bp.0, %for.end63 ], [ %bp.1, %if.then58 ]</td></tr>
<tr><td align="left">  %storemerge = phi i32 [ %cc.0, %for.end63 ], [ %cc.1, %if.then58 ]</td></tr>
<tr><td align="left">  %retval.0 = phi i32 [ 1, %for.end63 ], [ 0, %if.then58 ]</td></tr>
<tr><td align="left">  store i8* %storemerge122, i8** %tif_rawcp, align 8, !tbaa !19</td></tr>
<tr><td align="left">  store i32 %storemerge, i32* %tif_rawcc, align 8, !tbaa !20</td></tr>
<tr><td align="left">  ret i32 %retval.0</td></tr>
</table>
</td></tr>
</table>> ]
f_bb0:fT -> f_bb1:f
f_bb0:fF -> m_bb0:f2
f_bb1:fT -> m_bb0:f1
f_bb1:fF -> f_bb2:f
f_bb2:fT -> f_bb3:f
f_bb2:fF -> f_bb4:f
f_bb3:f -> f_bb7:f
f_bb4:fT -> f_bb5:f
f_bb4:fF -> f_bb6:f
f_bb6:f -> f_bb7:f
f_bb7:f -> f_bb8:f
f_bb8:fT -> f_bb22:f
f_bb8:fF -> f_bb9:f
f_bb9:fT -> f_bb10:f
f_bb9:fF -> f_bb20:f
f_bb10:fT -> f_bb12:f
f_bb10:fF -> f_bb11:f
f_bb11:f -> f_bb15:f
f_bb12:f -> f_bb13:f
f_bb13:fT -> f_bb18:f
f_bb13:fF -> f_bb14:f
f_bb14:f -> f_bb13:f
f_bb15:fT -> f_bb19:f
f_bb15:fF -> f_bb16:f
f_bb16:fT -> f_bb19:f
f_bb16:fF -> f_bb17:f
f_bb17:f -> f_bb15:f
f_bb18:f -> f_bb19:f
f_bb19:f -> f_bb9:f
f_bb20:fT -> f_bb8:f
f_bb20:fF -> f_bb21:f
f_bb21:f -> f_bb23:f
f_bb22:f -> f_bb23:f
}

