digraph {
m_bb0 [shape = none, label  = <<table border="0" cellspacing="0">
<tr><td port="f1" border="1" colspan="2"><table bgcolor="LightYellow" border="0">
<tr><td align="left">if.then2.i:</td></tr>
<tr><td bgcolor="lightgreen" align="left">  %call.i = tail call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i64 0, i64 0), i32 0, %struct.FILE_POS* %5, %struct.FILE_POS* %5) #18</td></tr>
<tr><td bgcolor="#e8765c70" align="left">  br label %if.end10</td></tr>
</table>
</td>
<td port="f2" border="1" colspan="2"><table bgcolor="LightCyan" border="0">
<tr><td align="left">if.then2.i32:</td></tr>
<tr><td bgcolor="lightgreen" align="left">  %call.i31 = tail call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i64 0, i64 0), i32 0, %struct.FILE_POS* %9, %struct.FILE_POS* %9) #18</td></tr>
<tr><td bgcolor="#e8765c70" align="left"> </td></tr>
<tr><td bgcolor="#e8765c70" align="left">  unreachable</td></tr>
</table>
</td></tr>
</table>> ]
f_bb0 [shape = none, label  = <<table  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">entry:</td></tr>
<tr><td align="left">  %0 = load i32, i32* @g_next_objnum, align 4, !tbaa !3</td></tr>
<tr><td align="left">  %sub = add i32 %0, -1</td></tr>
<tr><td align="left">  %rem = and i32 %sub, 255</td></tr>
<tr><td align="left">  %1 = load %struct.t_offset_block*, %struct.t_offset_block** @g_cur_obj_offset_block, align 8, !tbaa !7</td></tr>
<tr><td align="left">  %cmp = icmp eq i32 %rem, 0</td></tr>
<tr><td bgcolor="yellow" align="left">  br i1 %cmp, label %if.then, label %if.else12</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb1 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">if.then:</td></tr>
<tr><td align="left">  %call = tail call noalias align 16 dereferenceable_or_null(1032) i8* @malloc(i64 1032) #18</td></tr>
<tr><td align="left">  %2 = bitcast i8* %call to %struct.t_offset_block*</td></tr>
<tr><td align="left">  %cmp2 = icmp eq i8* %call, null</td></tr>
<tr><td align="left">  br i1 %cmp2, label %if.then3, label %if.end</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb2 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">if.then3:</td></tr>
<tr><td align="left">  %3 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8, !tbaa !7</td></tr>
<tr><td align="left">  %call4 = tail call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.133, i64 0, i64 0), i32 1, %struct.FILE_POS* %3) #18</td></tr>
<tr><td align="left">  br label %if.end</td></tr>
</table>
</td></tr>
</table>> ]
f_bb3 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">if.end:</td></tr>
<tr><td align="left">  %cmp5 = icmp ult i32 %sub, 256</td></tr>
<tr><td align="left">  br i1 %cmp5, label %if.then6, label %if.else</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb4 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">if.then6:</td></tr>
<tr><td align="left">  %4 = load %struct.t_offset_block*, %struct.t_offset_block** @g_obj_offset_list, align 8, !tbaa !7</td></tr>
<tr><td align="left">  %cmp7.not = icmp eq %struct.t_offset_block* %4, null</td></tr>
<tr><td align="left">  %5 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8, !tbaa !7</td></tr>
<tr><td align="left">  br i1 %cmp7.not, label %if.end10, label %if.then2.i</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb5 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">if.else:</td></tr>
<tr><td align="left">  %6 = load %struct.t_offset_block*, %struct.t_offset_block** @g_cur_obj_offset_block, align 8, !tbaa !7</td></tr>
<tr><td align="left">  %cmp8.not = icmp eq %struct.t_offset_block* %6, null</td></tr>
<tr><td align="left">  %7 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8, !tbaa !7</td></tr>
<tr><td align="left">  %8 = bitcast %struct.t_offset_block* %6 to i8**</td></tr>
<tr><td align="left">  br i1 %cmp8.not, label %if.then2.i28, label %if.end10</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb6 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">if.then2.i28:</td></tr>
<tr><td align="left">  %call.i27 = tail call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i64 0, i64 0), i32 0, %struct.FILE_POS* %7, %struct.FILE_POS* %7) #18</td></tr>
<tr><td align="left">  %.pre = load i8**, i8*** bitcast (%struct.t_offset_block** @g_cur_obj_offset_block to i8***), align 8, !tbaa !7</td></tr>
<tr><td align="left">  br label %if.end10</td></tr>
</table>
</td></tr>
</table>> ]
f_bb7 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">if.end10:</td></tr>
<tr><td align="left">  %.sink = phi i8** [ bitcast (%struct.t_offset_block** @g_obj_offset_list to i8**), %if.then6 ], [ bitcast (%struct.t_offset_block** @g_obj_offset_list to i8**), %if.then2.i ], [ %8, %if.else ], [ %.pre, %if.then2.i28 ]</td></tr>
<tr><td align="left">  store i8* %call, i8** %.sink, align 8, !tbaa !7</td></tr>
<tr><td align="left">  %m_next_block11 = getelementptr inbounds %struct.t_offset_block, %struct.t_offset_block* %2, i64 0, i32 0</td></tr>
<tr><td align="left">  store %struct.t_offset_block* null, %struct.t_offset_block** %m_next_block11, align 16, !tbaa !9</td></tr>
<tr><td align="left">  store i8* %call, i8** bitcast (%struct.t_offset_block** @g_cur_obj_offset_block to i8**), align 8, !tbaa !7</td></tr>
<tr><td align="left">  br label %if.end15</td></tr>
</table>
</td></tr>
</table>> ]
f_bb8 [shape = none,  xlabel="R", label  = <<table  bgcolor="LightCyan"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">if.else12:</td></tr>
<tr><td align="left">  %cmp13.not = icmp eq %struct.t_offset_block* %1, null</td></tr>
<tr><td align="left">  %9 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8, !tbaa !7</td></tr>
<tr><td align="left">  br i1 %cmp13.not, label %if.then2.i32, label %if.end15</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb9 [shape = none, label  = <<table  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">if.end15:</td></tr>
<tr><td align="left">  %the_block.0 = phi %struct.t_offset_block* [ %2, %if.end10 ], [ %1, %if.else12 ]</td></tr>
<tr><td align="left">  %10 = zext i32 %rem to i64</td></tr>
<tr><td align="left">  %arrayidx = getelementptr inbounds %struct.t_offset_block, %struct.t_offset_block* %the_block.0, i64 0, i32 1, i64 %10</td></tr>
<tr><td align="left">  store i32 0, i32* %arrayidx, align 4, !tbaa !3</td></tr>
<tr><td align="left">  %11 = load i32, i32* @g_next_objnum, align 4, !tbaa !3</td></tr>
<tr><td align="left">  %inc = add i32 %11, 1</td></tr>
<tr><td align="left">  store i32 %inc, i32* @g_next_objnum, align 4, !tbaa !3</td></tr>
<tr><td align="left">  ret i32 %11</td></tr>
</table>
</td></tr>
</table>> ]
f_bb0:fT -> f_bb1:f
f_bb0:fF -> f_bb8:f
f_bb1:fT -> f_bb2:f
f_bb1:fF -> f_bb3:f
f_bb2:f -> f_bb3:f
f_bb3:fT -> f_bb4:f
f_bb3:fF -> f_bb5:f
f_bb4:fT -> f_bb7:f
f_bb4:fF -> m_bb0:f1
m_bb0:f1 -> f_bb7:f
f_bb5:fT -> f_bb6:f
f_bb5:fF -> f_bb7:f
f_bb6:f -> f_bb7:f
f_bb7:f -> f_bb9:f
f_bb8:fT -> m_bb0:f2
f_bb8:fF -> f_bb9:f
}

