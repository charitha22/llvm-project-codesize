digraph {
m_bb0 [shape = none, label  = <<table border="0" cellspacing="0">
<tr><td port="f1" border="1" colspan="2"><table bgcolor="LightYellow" border="0">
<tr><td align="left">if.then:</td></tr>
<tr><td bgcolor="lightgreen" align="left">  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @pgpout, align 8, !tbaa !6</td></tr>
<tr><td bgcolor="lightgreen" align="left">  %4 = tail call i64 @fwrite(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.84, i64 0, i64 0), i64 51, i64 1, %struct._IO_FILE* %3)</td></tr>
<tr><td bgcolor="lightgreen" align="left">  br label %cleanup</td></tr>
</table>
</td>
<td port="f2" border="1" colspan="2"><table bgcolor="LightCyan" border="0">
<tr><td align="left">if.then17:</td></tr>
<tr><td bgcolor="lightgreen" align="left">  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @pgpout, align 8, !tbaa !6</td></tr>
<tr><td bgcolor="lightgreen" align="left">  %12 = call i64 @fwrite(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.84, i64 0, i64 0), i64 51, i64 1, %struct._IO_FILE* %11)</td></tr>
<tr><td bgcolor="lightgreen" align="left">  br label %cleanup</td></tr>
</table>
</td></tr>
</table>> ]
f_bb0 [shape = none, label  = <<table  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">entry:</td></tr>
<tr><td align="left">  %class.addr = alloca i8, align 1</td></tr>
<tr><td align="left">  %outbuf = alloca [262 x i8], align 16</td></tr>
<tr><td align="left">  %tstamp = alloca i64, align 8</td></tr>
<tr><td align="left">  %keyID = alloca [8 x i8], align 1</td></tr>
<tr><td align="left">  store i8 %class, i8* %class.addr, align 1, !tbaa !3</td></tr>
<tr><td align="left">  %0 = getelementptr inbounds [262 x i8], [262 x i8]* %outbuf, i64 0, i64 0</td></tr>
<tr><td align="left">  call void @llvm.lifetime.start.p0i8(i64 262, i8* nonnull %0) #15</td></tr>
<tr><td align="left">  %1 = bitcast i64* %tstamp to i8*</td></tr>
<tr><td align="left">  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #15</td></tr>
<tr><td align="left">  %2 = getelementptr inbounds [8 x i8], [8 x i8]* %keyID, i64 0, i64 0</td></tr>
<tr><td align="left">  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #15</td></tr>
<tr><td align="left">  %call = tail call i32 @countbits(i16* %n) #16</td></tr>
<tr><td align="left">  %cmp = icmp slt i32 %call, 249</td></tr>
<tr><td bgcolor="yellow" align="left">  br i1 %cmp, label %if.then, label %if.end</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb1 [shape = none,  xlabel="R", label  = <<table  bgcolor="LightCyan"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">if.end:</td></tr>
<tr><td align="left">  %call2 = call i64 @get_timestamp(i8* nonnull %1) #17</td></tr>
<tr><td align="left">  %5 = load i64, i64* %tstamp, align 8, !tbaa !8</td></tr>
<tr><td align="left">  %cmp3 = icmp ult i64 %5, 662716800</td></tr>
<tr><td align="left">  br i1 %cmp3, label %if.then4, label %if.end7</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb2 [shape = none,  xlabel="R", label  = <<table  bgcolor="LightCyan"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">if.then4:</td></tr>
<tr><td align="left">  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @pgpout, align 8, !tbaa !6</td></tr>
<tr><td align="left">  %call5 = call i8* @LANG(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.85, i64 0, i64 0)) #16</td></tr>
<tr><td align="left">  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* %call5) #17</td></tr>
<tr><td align="left">  br label %cleanup</td></tr>
</table>
</td></tr>
</table>> ]
f_bb3 [shape = none,  xlabel="R", label  = <<table  bgcolor="LightCyan"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">if.end7:</td></tr>
<tr><td align="left">  call void @hiloswap(i8* nonnull %1, i16 signext 4) #16</td></tr>
<tr><td align="left">  call void @MD_addbuffer(%struct.MD5Context* %MD, i8* nonnull %class.addr, i32 1, i8* null) #16</td></tr>
<tr><td align="left">  call void @MD_addbuffer(%struct.MD5Context* %MD, i8* nonnull %1, i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @md5buf, i64 0, i64 0)) #16</td></tr>
<tr><td align="left">  store i1 true, i1* @already_have_md5, align 1</td></tr>
<tr><td align="left">  %7 = load i8, i8* @quietmode, align 1, !tbaa !3</td></tr>
<tr><td align="left">  %tobool.not = icmp eq i8 %7, 0</td></tr>
<tr><td align="left">  br i1 %tobool.not, label %if.then8, label %if.end12</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb4 [shape = none,  xlabel="R", label  = <<table  bgcolor="LightCyan"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">if.then8:</td></tr>
<tr><td align="left">  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @pgpout, align 8, !tbaa !6</td></tr>
<tr><td align="left">  %call9 = call i8* @LANG(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.52, i64 0, i64 0)) #16</td></tr>
<tr><td align="left">  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* %call9) #17</td></tr>
<tr><td align="left">  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @pgpout, align 8, !tbaa !6</td></tr>
<tr><td align="left">  %call11 = call i32 @fflush(%struct._IO_FILE* %9) #17</td></tr>
<tr><td align="left">  br label %if.end12</td></tr>
</table>
</td></tr>
</table>> ]
f_bb5 [shape = none,  xlabel="R", label  = <<table  bgcolor="LightCyan"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">if.end12:</td></tr>
<tr><td align="left">  %10 = bitcast [262 x i8]* %outbuf to i16*</td></tr>
<tr><td align="left">  %call13 = call i32 @rsa_private_encrypt(i16* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @md5buf, i64 0, i64 0), i16 signext 16, i16* %e, i16* %d, i16* %p, i16* %q, i16* %u, i16* %n) #16</td></tr>
<tr><td align="left">  %cmp14 = icmp slt i32 %call13, 0</td></tr>
<tr><td align="left">  br i1 %cmp14, label %if.then15, label %if.end26</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb6 [shape = none,  xlabel="R", label  = <<table  bgcolor="LightCyan"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">if.then15:</td></tr>
<tr><td align="left">  switch i32 %call13, label %if.else22 [
    i32 -4, label %if.then17
    i32 -3, label %if.then20
  ]</td></tr>
</table>
</td></tr>
</table>> ]
f_bb7 [shape = none,  xlabel="R", label  = <<table  bgcolor="LightCyan"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">if.then20:</td></tr>
<tr><td align="left">  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @pgpout, align 8, !tbaa !6</td></tr>
<tr><td align="left">  %call21 = call i32 @fputs(i8* getelementptr inbounds ([130 x i8], [130 x i8]* @.str.63, i64 0, i64 0), %struct._IO_FILE* %13) #17</td></tr>
<tr><td align="left">  br label %cleanup</td></tr>
</table>
</td></tr>
</table>> ]
f_bb8 [shape = none,  xlabel="R", label  = <<table  bgcolor="LightCyan"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">if.else22:</td></tr>
<tr><td align="left">  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @pgpout, align 8, !tbaa !6</td></tr>
<tr><td align="left">  %call23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.86, i64 0, i64 0), i32 %call13) #17</td></tr>
<tr><td align="left">  br label %cleanup</td></tr>
</table>
</td></tr>
</table>> ]
f_bb9 [shape = none,  xlabel="R", label  = <<table  bgcolor="LightCyan"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">if.end26:</td></tr>
<tr><td align="left">  %call29 = call signext i16 @reg2mpi(i8* nonnull %0, i16* nonnull %10) #16</td></tr>
<tr><td align="left">  store i8 -119, i8* %certificate, align 1, !tbaa !3</td></tr>
<tr><td align="left">  %add36 = add i16 %call29, 21</td></tr>
<tr><td align="left">  %add.ptr = getelementptr inbounds i8, i8* %certificate, i64 1</td></tr>
<tr><td align="left">  %call38 = call i8* @put_word16(i16 zeroext %add36, i8* nonnull %add.ptr) #16</td></tr>
<tr><td align="left">  %15 = load i32, i32* @version_byte, align 4, !tbaa !10</td></tr>
<tr><td align="left">  %conv40 = trunc i32 %15 to i8</td></tr>
<tr><td align="left">  %arrayidx43 = getelementptr inbounds i8, i8* %certificate, i64 3</td></tr>
<tr><td align="left">  store i8 %conv40, i8* %arrayidx43, align 1, !tbaa !3</td></tr>
<tr><td align="left">  %arrayidx47 = getelementptr inbounds i8, i8* %certificate, i64 4</td></tr>
<tr><td align="left">  store i8 5, i8* %arrayidx47, align 1, !tbaa !3</td></tr>
<tr><td align="left">  %16 = load i8, i8* %class.addr, align 1, !tbaa !3</td></tr>
<tr><td align="left">  %arrayidx52 = getelementptr inbounds i8, i8* %certificate, i64 5</td></tr>
<tr><td align="left">  store i8 %16, i8* %arrayidx52, align 1, !tbaa !3</td></tr>
<tr><td align="left">  br label %for.cond</td></tr>
</table>
</td></tr>
</table>> ]
f_bb10 [shape = none,  xlabel="R", label  = <<table  bgcolor="LightCyan"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">for.cond:</td></tr>
<tr><td align="left">  %indvars.iv169 = phi i64 [ %indvars.iv.next170, %for.body ], [ 0, %if.end26 ]</td></tr>
<tr><td align="left">  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 6, %if.end26 ]</td></tr>
<tr><td align="left">  %exitcond.not = icmp eq i64 %indvars.iv169, 4</td></tr>
<tr><td align="left">  br i1 %exitcond.not, label %for.end, label %for.body</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb11 [shape = none,  xlabel="R", label  = <<table  bgcolor="LightCyan"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">for.body:</td></tr>
<tr><td align="left">  %arrayidx56 = getelementptr inbounds i8, i8* %1, i64 %indvars.iv169</td></tr>
<tr><td align="left">  %17 = load i8, i8* %arrayidx56, align 1, !tbaa !3</td></tr>
<tr><td align="left">  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1</td></tr>
<tr><td align="left">  %arrayidx59 = getelementptr inbounds i8, i8* %certificate, i64 %indvars.iv</td></tr>
<tr><td align="left">  store i8 %17, i8* %arrayidx59, align 1, !tbaa !3</td></tr>
<tr><td align="left">  %indvars.iv.next170 = add nuw nsw i64 %indvars.iv169, 1</td></tr>
<tr><td align="left">  br label %for.cond, !llvm.loop !12</td></tr>
</table>
</td></tr>
</table>> ]
f_bb12 [shape = none,  xlabel="R", label  = <<table  bgcolor="LightCyan"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">for.end:</td></tr>
<tr><td align="left">  call void @extract_keyID(i8* nonnull %2, i16* %n) #16</td></tr>
<tr><td align="left">  br label %for.cond62</td></tr>
</table>
</td></tr>
</table>> ]
f_bb13 [shape = none,  xlabel="R", label  = <<table  bgcolor="LightCyan"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">for.cond62:</td></tr>
<tr><td align="left">  %indvars.iv173 = phi i64 [ %indvars.iv.next174, %for.body65 ], [ 0, %for.end ]</td></tr>
<tr><td align="left">  %indvars.iv171 = phi i64 [ %indvars.iv.next172, %for.body65 ], [ 10, %for.end ]</td></tr>
<tr><td align="left">  %exitcond175.not = icmp eq i64 %indvars.iv173, 8</td></tr>
<tr><td align="left">  br i1 %exitcond175.not, label %for.end73, label %for.body65</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb14 [shape = none,  xlabel="R", label  = <<table  bgcolor="LightCyan"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">for.body65:</td></tr>
<tr><td align="left">  %arrayidx67 = getelementptr inbounds [8 x i8], [8 x i8]* %keyID, i64 0, i64 %indvars.iv173</td></tr>
<tr><td align="left">  %18 = load i8, i8* %arrayidx67, align 1, !tbaa !3</td></tr>
<tr><td align="left">  %indvars.iv.next172 = add nuw nsw i64 %indvars.iv171, 1</td></tr>
<tr><td align="left">  %arrayidx70 = getelementptr inbounds i8, i8* %certificate, i64 %indvars.iv171</td></tr>
<tr><td align="left">  store i8 %18, i8* %arrayidx70, align 1, !tbaa !3</td></tr>
<tr><td align="left">  %indvars.iv.next174 = add nuw nsw i64 %indvars.iv173, 1</td></tr>
<tr><td align="left">  br label %for.cond62, !llvm.loop !14</td></tr>
</table>
</td></tr>
</table>> ]
f_bb15 [shape = none,  xlabel="R", label  = <<table  bgcolor="LightCyan"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">for.end73:</td></tr>
<tr><td align="left">  %conv = sext i16 %call29 to i32</td></tr>
<tr><td align="left">  %arrayidx76 = getelementptr inbounds i8, i8* %certificate, i64 18</td></tr>
<tr><td align="left">  store i8 1, i8* %arrayidx76, align 1, !tbaa !3</td></tr>
<tr><td align="left">  %arrayidx79 = getelementptr inbounds i8, i8* %certificate, i64 19</td></tr>
<tr><td align="left">  store i8 1, i8* %arrayidx79, align 1, !tbaa !3</td></tr>
<tr><td align="left">  %19 = load i8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @md5buf, i64 0, i64 0), align 16, !tbaa !3</td></tr>
<tr><td align="left">  %arrayidx82 = getelementptr inbounds i8, i8* %certificate, i64 20</td></tr>
<tr><td align="left">  store i8 %19, i8* %arrayidx82, align 1, !tbaa !3</td></tr>
<tr><td align="left">  %20 = load i8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @md5buf, i64 0, i64 1), align 1, !tbaa !3</td></tr>
<tr><td align="left">  %arrayidx85 = getelementptr inbounds i8, i8* %certificate, i64 21</td></tr>
<tr><td align="left">  store i8 %20, i8* %arrayidx85, align 1, !tbaa !3</td></tr>
<tr><td align="left">  %add87 = add nsw i32 %conv, 2</td></tr>
<tr><td align="left">  %smax = call i32 @llvm.smax.i32(i32 %add87, i32 0)</td></tr>
<tr><td align="left">  %wide.trip.count = zext i32 %smax to i64</td></tr>
<tr><td align="left">  br label %for.cond86</td></tr>
</table>
</td></tr>
</table>> ]
f_bb16 [shape = none,  xlabel="R", label  = <<table  bgcolor="LightCyan"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">for.cond86:</td></tr>
<tr><td align="left">  %indvars.iv178 = phi i64 [ %indvars.iv.next179, %for.body90 ], [ 0, %for.end73 ]</td></tr>
<tr><td align="left">  %indvars.iv176 = phi i64 [ %indvars.iv.next177, %for.body90 ], [ 22, %for.end73 ]</td></tr>
<tr><td align="left">  %exitcond180.not = icmp eq i64 %indvars.iv178, %wide.trip.count</td></tr>
<tr><td align="left">  br i1 %exitcond180.not, label %for.end98, label %for.body90</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb17 [shape = none,  xlabel="R", label  = <<table  bgcolor="LightCyan"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">for.body90:</td></tr>
<tr><td align="left">  %arrayidx92 = getelementptr inbounds [262 x i8], [262 x i8]* %outbuf, i64 0, i64 %indvars.iv178</td></tr>
<tr><td align="left">  %21 = load i8, i8* %arrayidx92, align 1, !tbaa !3</td></tr>
<tr><td align="left">  %indvars.iv.next177 = add nuw nsw i64 %indvars.iv176, 1</td></tr>
<tr><td align="left">  %arrayidx95 = getelementptr inbounds i8, i8* %certificate, i64 %indvars.iv176</td></tr>
<tr><td align="left">  store i8 %21, i8* %arrayidx95, align 1, !tbaa !3</td></tr>
<tr><td align="left">  %indvars.iv.next179 = add nuw nsw i64 %indvars.iv178, 1</td></tr>
<tr><td align="left">  br label %for.cond86, !llvm.loop !15</td></tr>
</table>
</td></tr>
</table>> ]
f_bb18 [shape = none,  xlabel="R", label  = <<table  bgcolor="LightCyan"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">for.end98:</td></tr>
<tr><td align="left">  %22 = trunc i64 %indvars.iv176 to i32</td></tr>
<tr><td align="left">  %23 = load i8, i8* @quietmode, align 1, !tbaa !3</td></tr>
<tr><td align="left">  %tobool99.not = icmp eq i8 %23, 0</td></tr>
<tr><td align="left">  br i1 %tobool99.not, label %if.then100, label %cleanup</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb19 [shape = none,  xlabel="R", label  = <<table  bgcolor="LightCyan"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">if.then100:</td></tr>
<tr><td align="left">  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @pgpout, align 8, !tbaa !6</td></tr>
<tr><td align="left">  %call101 = call i32 @fputc(i32 46, %struct._IO_FILE* %24) #17</td></tr>
<tr><td align="left">  br label %cleanup</td></tr>
</table>
</td></tr>
</table>> ]
f_bb20 [shape = none, label  = <<table  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">cleanup:</td></tr>
<tr><td align="left">  %retval.0 = phi i32 [ -1, %if.then ], [ -1, %if.then4 ], [ -3, %if.then20 ], [ %call13, %if.else22 ], [ -4, %if.then17 ], [ %22, %if.then100 ], [ %22, %for.end98 ]</td></tr>
<tr><td align="left">  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #15</td></tr>
<tr><td align="left">  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #15</td></tr>
<tr><td align="left">  call void @llvm.lifetime.end.p0i8(i64 262, i8* nonnull %0) #15</td></tr>
<tr><td align="left">  ret i32 %retval.0</td></tr>
</table>
</td></tr>
</table>> ]
f_bb0:fT -> m_bb0:f1
f_bb0:fF -> f_bb1:f
m_bb0:f1 -> f_bb20:f
f_bb1:fT -> f_bb2:f
f_bb1:fF -> f_bb3:f
f_bb2:f -> f_bb20:f
f_bb3:fT -> f_bb4:f
f_bb3:fF -> f_bb5:f
f_bb4:f -> f_bb5:f
f_bb5:fT -> f_bb6:f
f_bb5:fF -> f_bb9:f
f_bb6:f -> f_bb8:f
f_bb6:f -> m_bb0:f2
f_bb6:f -> f_bb7:f
m_bb0:f2 -> f_bb20:f
f_bb7:f -> f_bb20:f
f_bb8:f -> f_bb20:f
f_bb9:f -> f_bb10:f
f_bb10:fT -> f_bb12:f
f_bb10:fF -> f_bb11:f
f_bb11:f -> f_bb10:f
f_bb12:f -> f_bb13:f
f_bb13:fT -> f_bb15:f
f_bb13:fF -> f_bb14:f
f_bb14:f -> f_bb13:f
f_bb15:f -> f_bb16:f
f_bb16:fT -> f_bb18:f
f_bb16:fF -> f_bb17:f
f_bb17:f -> f_bb16:f
f_bb18:fT -> f_bb19:f
f_bb18:fF -> f_bb20:f
f_bb19:f -> f_bb20:f
}

