digraph {
m_bb0 [shape = none, label  = <<table border="0" cellspacing="0">
<tr><td port="f1" border="1" colspan="2"><table bgcolor="LightYellow" border="0">
<tr><td align="left">if.else2:</td></tr>
<tr><td bgcolor="lightgreen" align="left">  tail call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 0), i32 711, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.add_to_entry_list, i64 0, i64 0)) #19</td></tr>
<tr><td bgcolor="lightgreen" align="left">  unreachable</td></tr>
</table>
</td>
<td port="f2" border="1" colspan="2"><table bgcolor="LightCyan" border="0">
<tr><td align="left">if.else:</td></tr>
<tr><td bgcolor="lightgreen" align="left">  tail call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 0), i32 710, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.add_to_entry_list, i64 0, i64 0)) #19</td></tr>
<tr><td bgcolor="lightgreen" align="left">  unreachable</td></tr>
</table>
</td></tr>
</table>> ]
f_bb0 [shape = none, label  = <<table  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">entry:</td></tr>
<tr><td align="left">  %cmp = icmp sgt i32 %val, 0</td></tr>
<tr><td bgcolor="yellow" align="left">  br i1 %cmp, label %if.end, label %if.else</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb1 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">if.end:</td></tr>
<tr><td align="left">  %0 = load %struct.entry*, %struct.entry** %pplist, align 8, !tbaa !3</td></tr>
<tr><td align="left">  %call = tail call fastcc i32 @get_from_entry_list(%struct.entry* %0, i32 %l, i32 %r) #20</td></tr>
<tr><td align="left">  %tobool.not = icmp eq i32 %call, 0</td></tr>
<tr><td align="left">  br i1 %tobool.not, label %if.end3, label %if.else2</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb2 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1" colspan="2"><table border="0">
<tr><td align="left">if.end3:</td></tr>
<tr><td align="left">  %call4 = tail call noalias align 16 dereferenceable_or_null(24) i8* @malloc(i64 24) #21</td></tr>
<tr><td align="left">  %1 = bitcast i8* %call4 to %struct.entry*</td></tr>
<tr><td align="left">  %cmp5 = icmp eq i8* %call4, null</td></tr>
<tr><td align="left">  br i1 %cmp5, label %if.then6, label %if.end8</td></tr>
</table>
</td></tr>
<tr><td border="1" port="fT">T</td><td border="1" port="fF">F</td></tr>
</table>> ]
f_bb3 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">if.then6:</td></tr>
<tr><td align="left">  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !3</td></tr>
<tr><td align="left">  %3 = tail call i64 @fwrite(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.71, i64 0, i64 0), i64 29, i64 1, %struct._IO_FILE* %2) #22</td></tr>
<tr><td align="left">  tail call void @exit(i32 1) #19</td></tr>
<tr><td align="left">  unreachable</td></tr>
</table>
</td></tr>
</table>> ]
f_bb4 [shape = none,  xlabel="L", label  = <<table  bgcolor="LightYellow"  border="0" cellspacing="0">
<tr><td port="f" border="1"><table border="0">
<tr><td align="left">if.end8:</td></tr>
<tr><td align="left">  %pnext = getelementptr inbounds %struct.entry, %struct.entry* %1, i64 0, i32 3</td></tr>
<tr><td align="left">  store %struct.entry* %0, %struct.entry** %pnext, align 16, !tbaa !7</td></tr>
<tr><td align="left">  %l9 = getelementptr inbounds %struct.entry, %struct.entry* %1, i64 0, i32 0</td></tr>
<tr><td align="left">  store i32 %l, i32* %l9, align 16, !tbaa !10</td></tr>
<tr><td align="left">  %r10 = getelementptr inbounds %struct.entry, %struct.entry* %1, i64 0, i32 1</td></tr>
<tr><td align="left">  store i32 %r, i32* %r10, align 4, !tbaa !11</td></tr>
<tr><td align="left">  %val11 = getelementptr inbounds %struct.entry, %struct.entry* %1, i64 0, i32 2</td></tr>
<tr><td align="left">  store i32 %val, i32* %val11, align 8, !tbaa !12</td></tr>
<tr><td align="left">  %4 = bitcast %struct.entry** %pplist to i8**</td></tr>
<tr><td align="left">  store i8* %call4, i8** %4, align 8, !tbaa !3</td></tr>
<tr><td align="left">  ret void</td></tr>
</table>
</td></tr>
</table>> ]
f_bb0:fT -> f_bb1:f
f_bb0:fF -> m_bb0:f2
f_bb1:fT -> f_bb2:f
f_bb1:fF -> m_bb0:f1
f_bb2:fT -> f_bb3:f
f_bb2:fF -> f_bb4:f
}

